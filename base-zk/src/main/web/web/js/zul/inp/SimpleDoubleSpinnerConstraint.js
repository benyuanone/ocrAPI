zul.inp.SimpleDoubleSpinnerConstraint=zk.$extends(zul.inp.SimpleConstraint,{setMin:(function(a,b){return function(c,d){var e=this[a];this[a]=c;if(e!==c||(d&&d.force)){this.__fname__=a.substring(1);b.apply(this,arguments);delete this.__fname__}return this}})("_min",(_zkf=function(){})),getMin:_zkf$=function(){return this._min},isMin:_zkf$,setMax:(function(a,b){return function(c,d){var e=this[a];this[a]=c;if(e!==c||(d&&d.force)){this.__fname__=a.substring(1);b.apply(this,arguments);delete this.__fname__}return this}})("_max",(_zkf)),getMax:_zkf$=function(){return this._max},isMax:_zkf$,parseConstraint_:function(c){var e=c.replace(/ +/g," ").split(/[, ]/),b=e.length,a;for(var d=0;d<b+1;d++){if(e[d]=="min"){this._min=e[++d]*1;a=true}else{if(e[d]=="max"){this._max=e[++d]*1;a=true}}}if(a){return}else{return this.$supers("parseConstraint_",arguments)}},validate:function(c,b){switch(typeof b){case"number":if((this._max&&b>this._max)||(this._min&&b<this._min)){var a=msgzul.OUT_OF_RANGE+": ";a+="("+this._min!=null?this._max!=null?this._min+" ~ "+this._max:">= "+this._min:"<= "+this._max+")"}}if(a){return a}else{return this.$supers("validate",arguments)}}});